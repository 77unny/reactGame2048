{"version":3,"sources":["components/Header.jsx","components/AboveGame.jsx","utils/number.jsx","utils/tile.jsx","constants.js","utils/assert.jsx","components/Tile.jsx","utils/keyboard.jsx","components/Game.jsx","hooks/useMoveTile.jsx","App.js","hooks/useLocalStorage.jsx","index.js"],"names":["Header","scroe","bestScore","className","style","marginRight","AboveGame","href","getRandomInteger","from","to","Math","floor","random","getInitialTileList","tileList","tile1","makeTile","tile2","push","checkCollision","tile","some","item","x","y","currentID","id","value","isNew","undefined","isMerged","moveTile","condition","message","Error","assert","isMoveY","isMinus","sorted","map","filter","isDisabled","sort","a","b","res","initialPos","pos","i","length","nextPos","newTileList","Tile","key","cn","observerMap","addKeyObserver","callback","hotkeys","ob","executeCallbacks","removeKeyObserver","Game","setScore","useState","setTileList","moveAndAdd","score","reduce","acc","v","newTile","moveUp","moveDown","moveLeft","moveRight","useEffect","useMoveTile","times","index","index2","App","initialValue","setValue","valueStr","window","localStorage","getItem","Number","prev","next","String","setItem","useLocalStorage","setBestScroe","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.616b80b8.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Header({ scroe, bestScore }) {\n  return (\n    <header className=\"heading\">\n      <h1 className=\"title\">2048</h1>\n      <div className=\"scores-container\">\n        <div className=\"score-container\" style={{ marginRight: 5 }}>\n          {scroe}\n        </div>\n        <div className=\"best-container\">{bestScore}</div>\n      </div>\n    </header>\n  );\n}\n","import React from 'react';\n\nexport default function AboveGame() {\n  return (\n    <div className=\"above-game\">\n      <p className=\"game-intro\">\n        Join the numbers and get to the <strong>2048 tile!</strong>\n      </p>\n      <a href=\"/\" className=\"restart-button\">\n        New Game\n      </a>\n    </div>\n  );\n}\n","export const getRandomInteger = (from, to) => Math.floor(Math.random() * to + from);\n","import { getRandomInteger } from './number';\nimport { MAX_POS } from '../constants';\nimport { assert } from './assert';\n\nexport const getInitialTileList = () => {\n  const tileList = [];\n  const tile1 = makeTile(tileList);\n  const tile2 = makeTile(tileList);\n  tileList.push(tile1);\n  tileList.push(tile2);\n  return tileList;\n};\n\nexport const checkCollision = (tileList, tile) => tileList.some(item => item.x === tile.x && item.y === tile.y);\n\nlet currentID = 0;\nexport const makeTile = tileList => {\n  let tile;\n\n  while (!tile || (tileList && checkCollision(tileList, tile))) {\n    tile = {\n      id: currentID++,\n      x: getRandomInteger(1, MAX_POS),\n      y: getRandomInteger(1, MAX_POS),\n      value: 2,\n      isNew: undefined,\n      isMerged: undefined,\n    };\n  }\n  return tile;\n};\n\nexport function moveTile({ tileList, x, y }) {\n  assert(x === 0 || y === 0, '');\n  const isMoveY = y !== 0;\n  const isMinus = x + y < 0;\n  const sorted = tileList\n    .map(item => ({ ...item, isMerged: false, isNew: false }))\n    .filter(item => !item.isDisabled)\n    .sort((a, b) => {\n      const res = isMoveY ? a.x - b.x : a.y - b.y;\n      if (res) {\n        return res;\n      } else {\n        if (isMoveY) {\n          return isMinus ? a.y - b.y : b.y - a.y;\n        } else {\n          return isMinus ? a.x - b.x : b.x - a.x;\n        }\n      }\n    });\n  const initialPos = isMinus ? 1 : MAX_POS;\n  let pos = initialPos;\n  for (let i = 0; i < sorted.length; i++) {\n    if (isMoveY) {\n      sorted[i].y = pos;\n      pos = isMinus ? pos + 1 : pos - 1;\n      if (sorted[i].x !== sorted[i + 1]?.x) {\n        pos = initialPos;\n      }\n    } else {\n      sorted[i].x = pos;\n      pos = isMinus ? pos + 1 : pos - 1;\n      if (sorted[i].y !== sorted[i + 1]?.y) {\n        pos = initialPos;\n      }\n    }\n  }\n\n  let nextPos = 0;\n  const newTileList = [...sorted];\n  for (let i = 0; i < sorted.length; i++) {\n    if (sorted[i].isDisabled) {\n      continue;\n    }\n\n    if (nextPos && (isMoveY ? sorted[i].x === sorted[i - 1]?.x : sorted[i].y === sorted[i - 1]?.y)) {\n      if (isMoveY) {\n        sorted[i].y = nextPos;\n      } else {\n        sorted[i].x = nextPos;\n      }\n      nextPos += isMinus ? 1 : -1;\n    } else {\n      nextPos = 0;\n    }\n\n    if (\n      (isMoveY ? sorted[i].x === sorted[i + 1]?.x : sorted[i].y === sorted[i + 1]?.y) &&\n      sorted[i].value === sorted[i + 1]?.value\n    ) {\n      const tile = makeTile();\n      tile.x = sorted[i].x;\n      tile.y = sorted[i].y;\n      tile.isMerged = true;\n      tile.value = sorted[i].value * 2;\n      newTileList.push(tile);\n      sorted[i].isDisabled = true;\n      sorted[i + 1].isDisabled = true;\n      if (isMoveY) {\n        nextPos = sorted[i + 1].y;\n        sorted[i + 1].y = sorted[i].y;\n      } else {\n        nextPos = sorted[i + 1].x;\n        sorted[i + 1].x = sorted[i].x;\n      }\n    }\n  }\n  return newTileList;\n}\n","export const MAX_POS = 4;\n","export const assert = function (condition, message) {\n  if (!condition) {\n    throw new Error(`Assertion failed: ${message}`);\n  }\n};\n","import React from 'react';\nimport cn from 'classnames';\n\nexport default function Tile({ id, x, y, value, isNew, isMerged }) {\n  return (\n    <div\n      key={id}\n      className={cn(`tile tile-${value} tile-position-${x}-${y}`, {\n        'tile-new': isNew,\n        'tile-merged': isMerged,\n      })}\n    >\n      <div className=\"tile-inner\">{value}</div>\n    </div>\n  );\n}\n","import hotkeys from 'hotkeys-js';\n\nconst observerMap = {};\nexport function addKeyObserver(key, callback) {\n  if (!observerMap[key]) {\n    observerMap[key] = [];\n    hotkeys(key, () => executeCallbacks(key));\n  }\n  observerMap[key].push(callback);\n}\nexport function removeKeyObserver(key, callback) {\n  observerMap[key] = observerMap[key].filter(item => item !== callback);\n}\n\nfunction executeCallbacks(key) {\n  for (const ob of observerMap[key]) {\n    ob();\n  }\n}\n","import React, { useState } from 'react';\nimport times from 'lodash/times';\nimport { MAX_POS } from '../constants';\nimport { getInitialTileList } from '../utils/tile';\nimport Tile from './Tile';\nimport useMoveTile from '../hooks/useMoveTile';\n\nexport default function Game({ setScore }) {\n  const [tileList, setTileList] = useState(getInitialTileList);\n  useMoveTile({ tileList, setTileList, setScore });\n  return (\n    <div className=\"game-container\">\n      <div className=\"grid-container\">\n        {times(MAX_POS, index => (\n          <div key={index} className=\"grid-row\">\n            {times(MAX_POS, index2 => (\n              <div key={index2} className=\"grid-cell\"></div>\n            ))}\n          </div>\n        ))}\n      </div>\n\n      <div className=\"tile-container\">\n        {tileList.map(item => (\n          <Tile key={item.id} {...item} />\n        ))}\n      </div>\n    </div>\n  );\n}\n","import { useEffect } from 'react';\nimport { addKeyObserver, removeKeyObserver } from '../utils/keyboard';\nimport { makeTile, moveTile } from '../utils/tile';\n\nexport default function useMoveTile({ tileList, setTileList, setScore }) {\n  const moveAndAdd = ({ x, y }) => {\n    const newTileList = moveTile({ tileList, x, y });\n    const score = newTileList.reduce((acc, item) => (item.isMerged ? acc + item.value : acc), 0);\n    setScore(v => v + score);\n    const newTile = makeTile(newTileList);\n    newTile.isNew = true;\n    newTileList.push(newTile);\n    setTileList(newTileList);\n  };\n\n  const moveUp = () => {\n    moveAndAdd({ x: 0, y: -1 });\n  };\n  const moveDown = () => {\n    moveAndAdd({ x: 0, y: 1 });\n  };\n  const moveLeft = () => {\n    moveAndAdd({ x: -1, y: 0 });\n  };\n  const moveRight = () => {\n    moveAndAdd({ x: 1, y: 0 });\n  };\n\n  useEffect(() => {\n    addKeyObserver('up', moveUp);\n    addKeyObserver('down', moveDown);\n    addKeyObserver('left', moveLeft);\n    addKeyObserver('right', moveRight);\n\n    return () => {\n      removeKeyObserver('up', moveUp);\n      removeKeyObserver('down', moveDown);\n      removeKeyObserver('left', moveLeft);\n      removeKeyObserver('right', moveRight);\n    };\n  });\n}\n","import React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport AboveGame from './components/AboveGame';\nimport Game from './components/Game';\nimport useLocalStorage from './hooks/useLocalStorage';\n\nfunction App() {\n  const [scroe, setScore] = useState(0);\n  const [bestScore, setBestScroe] = useLocalStorage('bestScore', 0);\n\n  useEffect(() => {\n    if (scroe > bestScore) {\n      setBestScroe(scroe);\n    }\n  });\n\n  return (\n    <div className=\"container\">\n      <Header scroe={scroe} bestScore={bestScore} />\n      <AboveGame />\n      <Game setScore={setScore} />\n    </div>\n  );\n}\n\nexport default App;\n","import { useState, useEffect } from 'react';\n\nexport default function useLocalStorage(key, initialValue) {\n  const [value, setValue] = useState(initialValue);\n\n  useEffect(() => {\n    const valueStr = window.localStorage.getItem(key);\n    if (valueStr) {\n      setValue(Number(valueStr));\n    }\n  }, [key]);\n\n  useEffect(() => {\n    const prev = window.localStorage.getItem(key);\n    const next = String(value);\n    if (prev !== next) {\n      window.localStorage.setItem(key, next);\n    }\n  }, [key, value]);\n\n  return [value, setValue];\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}